@model IEMS_WEB.Models.ChangePassowrd
@{
    @if (Model.UserId > 0)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutfgtPwd.cshtml";
    }
}

<script src="~/assets/js/translator/changepassword.js"></script>


    <style>

        .alert {
            border-radius: 8px;
            padding: 15px;
            overflow: hidden;
            width: 500px !important;
            position: absolute !important;
            z-index: 9999999 !important;
            top: -30px !important;
            right: -41px !important;
        }



        .customizer-links {
            display: none !important
        }

        iframe#\:2\.container {
            display: none !important;
        }

        .progress-bar {
            background-color: green !important
        }

        .progress {
            height: 7px !important
        }

        .goog-te-gadget-simple {
            font-size: 7pt !important;
        }

        .goog-te-gadget img {
            display: none !important
        }

        .modal-backdrop.in {
            opacity: 0.5 !important;
        }
    </style>


@using (Html.BeginForm())
{
    
                       
                           
                            <div class="row">
                                <div class="col-md-4">
            <label data-translate="Current Password" class="control-label col-md-4">
                                        Current Password<span style="color: #FF0000;">*</span>
                                    </label>
                                    <div class="input-group col-md-6">
                                        @Html.TextBoxFor(m => m.CurrentPassword, new { @maxlength = "12", @minlength = "8", @Type = "password", @class = "form-control password-box", oncopy = "return false", ondrag = "return false", onpaste = "return false", autocomplete = "off", id = "txtCurrentPassword", required = "required", @onkeypress = "return RestrictSpace(event);" })

                                        <i style="float: right !important;margin-top: 08px !important;margin-right: 25px !important;z-index: 9999 !important;position: absolute;right: 0;" class="fa fa-eye" aria-hidden="true" id="togglePassword1" style="cursor: pointer;"></i>

                                    </div>
                                    <span class="text-danger" id="dspCurrentPassword"></span>
                                </div>
                                <div class="col-md-4">
            <label data-translate="New Password" class="control-label col-md-4">
                                        New Password <span style="color: #FF0000;">*</span>
                                    </label>
                                    <div class="input-group col-md-6">
                                        @Html.TextBoxFor(m => m.NewPassword, new { @maxlength = "12", @minlength = "8", @Type = "password", @class = "form-control password-box", autocomplete = "off", id = "txtUserPassword", required = "required", oncopy = "return false", ondrag = "return false", onpaste = "return false", @onkeypress = "return RestrictSpace(event);" })
                                        <i style="float: right !important;margin-top: 08px !important;margin-right: 25px !important;z-index: 9999 !important;position: absolute;right: 0;" class="fa fa-eye" aria-hidden="true" id="togglePassword2" style="cursor: pointer;"></i>
                                    </div>
                                    <span class="text-danger" id="dspNewPassword"></span>
                                </div>
                                <div class="col-md-4">
            <label data-translate="Confirm Password" class="control-label col-md-5">
                                        Confirm Password <span style="color: #FF0000;">*</span>
                                    </label>
                                    <div class="input-group col-md-6">
                                        @Html.TextBoxFor(m => m.ConfirmPassword, new { @maxlength = "12", @minlength = "8", @Type = "password", @class = "form-control password-box", autocomplete = "off", id = "txtUserConfirmPassword", required = "required", oncopy = "return false", ondrag = "return false", onpaste = "return false", @onkeypress = "return RestrictSpace(event);" })
                                        <i style="float: right !important;margin-top: 08px !important;margin-right: 25px !important;z-index: 9999 !important;position: absolute;right: 0;" class="fa fa-eye" aria-hidden="true" id="togglePassword3" style="cursor: pointer;"></i>

                                    </div>
                                    <span class="text-danger" id="dspConfirmPassword"></span>
                                    <span class="text-success" id="dspConfirmPasswordMatch"></span>
                                </div>
                                
                            </div>
                      <div class="row">
                          <div class="col-md-4"></div>
      
            <div class="col-md-4" id="IdPolicy">
                <div id="popover-password">
                <p data-translate="Password Strength:">Password Strength: <span id="result"> </span></p>
                    <div class="progress">
                        <div id="password-strength" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                        </div>
                    </div>
                    <ul class="list-unstyled">
                        <li class=""><span class="low-upper-case"><i class="fa fa-file-text" aria-hidden="true"></i></span>&nbsp; 1 Lowercase &amp; 1 Uppercase</li>
                        <li class=""><span class="one-number"><i class="fa fa-file-text" aria-hidden="true"></i></span> &nbsp;1 Number (0-9)</li>
                        <li class=""><span class="one-special-char"><i class="fa fa-file-text" aria-hidden="true"></i></span> &nbsp;1 Special Character (!@@#$%^&*).</li>
                        <li class=""><span class="eight-character"><i class="fa fa-file-text" aria-hidden="true"></i></span>&nbsp; Atleast 8 Characters</li>
                    </ul>
                </div>
            </div>
       
                      </div>
                        <div class="text-center">
        <button id="btnUpdate" data-translate="Update" type="submit" class="btn btn-round btn-success m-b-10" name="btnSave" value="Update">Update </button>
        <button type="button" data-translate="Reset" class="btn btn-round btn-danger m-b-10" id="btnReset">Reset</button>
                        </div>
                   



  
}
@if (Model.status == 1)
{
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            swal({
                title: '',
                text: "@Model.StatusMessage",
                type: "success"
            }).then(function () {
                window.location.href = "../Login/Login";
            });
        });
    </script>
}
@if (Model.status == -1)
{
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            swal({
                title: '',
                text: "@Model.StatusMessage",
                type: "warning"

            }).then(function () {
                ///window.location.href = "../CreateUser/CreateUsers";
            });
        });
    </script>
}
@if (Model.status == -2)
{
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            swal({
                title: '',
                text: "@Model.StatusMessage",
                type: "warning"

            }).then(function () {
                ///window.location.href = "../CreateUser/CreateUsers";
            });
        });
    </script>
}
<script type="text/javascript">
    $(document).ready(function () {

        $('#btnBack').on('click', function () {
           
            window.history.back();
        });
        const togglePassword = document.querySelector('#togglePassword1');
        const password = document.querySelector('#txtCurrentPassword');
        togglePassword.addEventListener('click', function (e) {
            // toggle the type attribute
            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
            password.setAttribute('type', type);
            // toggle the eye slash icon
            this.classList.toggle('fa-eye-slash');
        });
        const togglePassword_ = document.querySelector('#togglePassword2');
        const password_ = document.querySelector('#txtUserPassword');
        togglePassword_.addEventListener('click', function (e) {
            // toggle the type attribute
            const type = password_.getAttribute('type') === 'password' ? 'text' : 'password';
            password_.setAttribute('type', type);
            // toggle the eye slash icon
            this.classList.toggle('fa-eye-slash');
        });

        const togglePassword__ = document.querySelector('#togglePassword3');
        const password__ = document.querySelector('#txtUserConfirmPassword');
        togglePassword__.addEventListener('click', function (e) {
            // toggle the type attribute
            const type = password__.getAttribute('type') === 'password' ? 'text' : 'password';
            password__.setAttribute('type', type);
            // toggle the eye slash icon
            this.classList.toggle('fa-eye-slash');
        });
        $("ul.list-unstyled li").addClass('disabled');
        //$("#btnClose").click(function (e) {
        //    window.location.href = "../Dashboard/Dashboard";
        //});
        $("#btnReset").click(function (e) {
            window.location.href = "../Login/ChangePassword";
        });

        $("#btnUpdate").click(function (e) {
            debugger;
            var cureent_pwd = $('#txtCurrentPassword').val().trim();
            var user_pwd = $('#txtUserPassword').val().trim();
            var confirm_pwd = $('#txtUserConfirmPassword').val().trim();
            var flag = $('#hdnFlag').val('C');

            $('#dspCurrentPassword').html('');
            $('#dspNewPassword').html('');
            $('#dspConfirmPassword').html('');

            if (cureent_pwd == "" || cureent_pwd == null) {
                $('#dspCurrentPassword').html('Please Enter Current Password');
                return false;
            }
            if (user_pwd == "" || user_pwd == null) {
                $('#dspNewPassword').html('Please Enter New Password');

                return false;
            }
            if (confirm_pwd == "" || confirm_pwd == null) {
                $('#dspConfirmPassword').html('Please Enter Confirm Password');
                $('#dspConfirmPasswordMatch').html('');
                return false;
            }
            if (user_pwd.length < 8) {
                $('#dspNewPassword').html('New Password Must Contain Atleast 8 Characters');
                return false;
            }

            if (confirm_pwd.length < 8) {
                $('#dspConfirmPassword').html('Confirm Password Must Contain Atleast 8 Characters');
                $('#dspConfirmPasswordMatch').html('');
                return false;
            }
            if (!(user_pwd.match(/([a-z])/) && user_pwd.match(/([A-Z])/) && user_pwd.match(/([0-9])/) && password.match(/([!,%,&,@@,#,$,^,*,?,_,~])/))) {
                $('#dspNewPassword').html('New Password Does Not Meet Below Requirments');
                return false;
            }

            if (user_pwd != confirm_pwd) {
                Swal.fire({
                    text: "Password Does Not Match",
                    type: "success",
                    confirmButtonText: "Yes"
                }).then(function () {
                });
                $("#txtUserPassword").focus();
                return false;
            }
        });
        $('#txtCurrentPassword').change(function (e) {
            debugger;
            var input = $(this);
            if (input.val() == "") {
                $('#txtCurrentPassword').tooltip("show");
            }
            else {
                $('#txtCurrentPassword').tooltip("dispose");
            }
        });
        $('#txtUserPassword').change(function (e) {
            debugger;
            var input = $(this);
            if (input.val() == "") {
                $('#txtUserPassword').tooltip("show");
            }
            else {
                $('#txtUserPassword').tooltip("dispose");
            }
        });
        $('#txtUserConfirmPassword').change(function (e) {
            debugger;
            var input = $(this);
            if (input.val() == "") {
                $('#txtUserConfirmPassword').tooltip("show");
            }
            else {
                $('#txtUserConfirmPassword').tooltip("dispose");
            }
        });
    });
    $(document).ready(function () {
        $('#txtUserPassword').keyup(function () {
            var password = $('#txtUserPassword').val();
            if (checkStrength(password) == false) {
                $('#sign-up').attr('disabled', true);
            }
            $('#dspConfirmPasswordMatch').html('');
            $('#dspCurrentPassword').html('');
            $('#dspNewPassword').html('');
            $('#dspConfirmPassword').html('');
        });
        $('#txtUserConfirmPassword').keyup(function () {
            var NewPassword = $('#txtUserPassword').val();
            var ConfirmPassword = $('#txtUserConfirmPassword').val();
            $('#dspConfirmPassword').html('');
            $('#dspConfirmPasswordMatch').html('');

            if (NewPassword == ConfirmPassword) {
                $('#dspConfirmPasswordMatch').html('Password Matched');
            }
            else {
                $('#dspConfirmPasswordMatch').html('');
            }
            
        });

        function checkStrength(password) {
            debugger;
            var strength = 0;
            //If password contains both lower and uppercase characters, increase strength value.
            if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {
                strength += 1;
                $('.low-upper-case').addClass('text-success');
                $('.low-upper-case i').removeClass('fa-file-text').addClass('fa-check');
                $('#popover-password-top').addClass('hide');
            } else {
                $('.low-upper-case').removeClass('text-success');
                $('.low-upper-case i').addClass('fa-file-text').removeClass('fa-check');
                $('#popover-password-top').removeClass('hide');
            }

            //If it has numbers and characters, increase strength value.
            if (password.match(/([a-zA-Z])/) && password.match(/([0-9])/)) {
                strength += 1;
                $('.one-number').addClass('text-success');
                $('.one-number i').removeClass('fa-file-text').addClass('fa-check');
                $('#popover-password-top').addClass('hide');

            } else {
                $('.one-number').removeClass('text-success');
                $('.one-number i').addClass('fa-file-text').removeClass('fa-check');
                $('#popover-password-top').removeClass('hide');
            }

            //If it has one special character, increase strength value.
            if (password.match(/([!,%,&,@@,#,$,^,*,?,_,~])/)) {
                strength += 1;
                $('.one-special-char').addClass('text-success');
                $('.one-special-char i').removeClass('fa-file-text').addClass('fa-check');
                $('#popover-password-top').addClass('hide');

            } else {
                $('.one-special-char').removeClass('text-success');
                $('.one-special-char i').addClass('fa-file-text').removeClass('fa-check');
                $('#popover-password-top').removeClass('hide');
            }

            if (password.length > 7) {
                strength += 1;
                $('.eight-character').addClass('text-success');
                $('.eight-character i').removeClass('fa-file-text').addClass('fa-check');
                $('#popover-password-top').addClass('hide');

            } else {
                $('.eight-character').removeClass('text-success');
                $('.eight-character i').addClass('fa-file-text').removeClass('fa-check');
                $('#popover-password-top').removeClass('hide');
            }
            // If value is less than 2
            if (strength < 2) {
                $('#result').removeClass()
                $('#password-strength').addClass('progress-bar-danger');

                $('#result').addClass('text-danger').text('Very Weak');
                $('#password-strength').css('width', '10%');
            } else if (strength == 2) {
                $('#result').addClass('good');
                $('#password-strength').removeClass('progress-bar-danger');
                $('#password-strength').addClass('progress-bar-warning');
                $('#result').addClass('text-warning').text('Weak')
                $('#password-strength').css('width', '60%');
                return 'Week'
            } else if (strength == 4) {
                $('#result').removeClass()
                $('#result').addClass('strong');
                $('#password-strength').removeClass('progress-bar-warning');
                $('#password-strength').addClass('progress-bar-success');
                $('#result').addClass('text-success').text('Strong');
                $('#password-strength').css('width', '100%');
                return 'Strong';
            }
        }
    });
    function RestrictSpace(evt) {
        if (evt.which == 32) {
            return false;
        }
        else {
            return true;
        }
    }
</script>

